import random
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from questions_answers import USER_PROMPTS, BOT_RESPONSES

# –ü–∞–º—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

# –ö–Ω–æ–ø–∫–∏
gender_keyboard = ReplyKeyboardMarkup([
    [KeyboardButton("üßë –Ø –ø–∞—Ä–µ–Ω—å"), KeyboardButton("üë© –Ø –¥–µ–≤—É—à–∫–∞")]
], resize_keyboard=True)

main_keyboard = ReplyKeyboardMarkup([
    [KeyboardButton("üìú –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –∏—Å—Ç–æ—Ä–∏—é"), KeyboardButton("üòÇ –ê–Ω–µ–∫–¥–æ—Ç")],
    [KeyboardButton("üß≠ –ú–µ–Ω—é"), KeyboardButton("üíå –ü–æ–¥–ø–∏—Å–∫–∞")],
    [KeyboardButton("üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç")]
], resize_keyboard=True)

short_stories = [
    "–û–Ω –æ–¥–Ω–∞–∂–¥—ã —É—à—ë–ª –≤ –Ω–∏–∫—É–¥–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ —Å–µ–±—è. –ò –Ω–∞—à—ë–ª.",
    "–ë—ã–ª–∞ –∑–∏–º–∞, –≤—Å—ë –≤–æ–∫—Ä—É–≥ –±—ã–ª–æ –ø—É—Å—Ç–æ, –Ω–æ –≤–Ω—É—Ç—Ä–∏ ‚Äî –Ω–∞–¥–µ–∂–¥–∞.",
    "–ù–∏–∫—Ç–æ –Ω–µ –≤–µ—Ä–∏–ª, –Ω–æ –æ–Ω–∞ —Å–º–æ–≥–ª–∞. –ü–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ —Å–¥–∞–≤–∞–ª–∞—Å—å.",
]

jokes = [
    "‚Äî –ü–æ—á–µ–º—É –±–æ—Ç –Ω–µ –ø–æ—à—ë–ª –Ω–∞ —Å–≤–∏–¥–∞–Ω–∏–µ?\n‚Äî –£ –Ω–µ–≥–æ –∑–∞–≤–∏—Å–ª–æ —Å–µ—Ä–¥—Ü–µ üíî",
    "‚Äî –Ø –ø—Ä–æ–∫–∞—á–∞–ª –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç!\n‚Äî –ê —Ö–∞—Ä–∏–∑–º—É?\n‚Äî –ù—É, —É –º–µ–Ω—è –∂–µ –±–æ—Ç.",
]

facts = [
    "–ñ–µ–Ω—Å–∫–∏–π –º–æ–∑–≥ –∞–∫—Ç–∏–≤–Ω–µ–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø–æ–∫–æ—è, —á–µ–º –º—É–∂—Å–∫–æ–π.",
    "–°–µ—Ä–¥—Ü–µ —á–µ–ª–æ–≤–µ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–µ—Ç ¬´–±–æ–ª–µ—Ç—å¬ª –æ—Ç —Å—Ç—Ä–µ—Å—Å–∞.",
    "–†–æ–±–æ—Ç—ã –ø–æ–∫–∞ –Ω–µ —É–º–µ—é—Ç –ª—é–±–∏—Ç—å... –Ω–æ —è —É—á—É—Å—å üòâ",
]

# –û—Ç–≤–µ—Ç—ã –ø–æ –ø–æ–ª—É
male_responses = [
    "–ü–æ–Ω—è–ª —Ç–µ–±—è, –±—Ä–æ. –î–∞–≤–∞–π –ø–æ–¥—Ä–æ–±–Ω–µ–µ.",
    "–ó–≤—É—á–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, —Ä–∞—Å—Å–∫–∞–∂–∏ –µ—â—ë!",
    "–ù–æ—Ä–º —Ç–µ–º–∞! –ê —á—Ç–æ –¥–∞–ª—å—à–µ?",
    "–¢—ã –ø—Ä—è–º –º—É–∂–∏–∫ —Å –º—ã—Å–ª—è–º–∏ üí™",
]

female_responses = [
    "–ó–≤—É—á–∏—Ç –æ—á–µ–Ω—å –∏—Å–∫—Ä–µ–Ω–Ω–µ ‚ù§Ô∏è",
    "–¢—ã —É–º–µ–µ—à—å –¥–µ–ª–∏—Ç—å—Å—è –Ω–∞—Å—Ç–æ—è—â–∏–º üå∏",
    "–ú–Ω–µ –ø—Ä–∏—è—Ç–Ω–æ —Ç–µ–±—è —Å–ª—É—à–∞—Ç—å üòå",
    "–¢—ã –æ—á–µ–Ω—å –º–∏–ª–∞—è, –ø—Ä–∞–≤–¥–∞ üíñ",
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_data[user_id] = {"gender": None}
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–¥—Ä—É–≥ üß† –ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –ø—Ä–æ–¥–æ–ª–∂–∏–º, —Å–∫–∞–∂–∏, –∫—Ç–æ —Ç—ã:",
        reply_markup=gender_keyboard
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.lower()

    # –ü–æ–ª –Ω–µ –≤—ã–±—Ä–∞–Ω ‚Äî –æ–ø—Ä–µ–¥–µ–ª–∏–º
    if user_id not in user_data:
        user_data[user_id] = {"gender": None}

    if user_data[user_id]["gender"] is None:
        if "–ø–∞—Ä–µ–Ω—å" in text:
            user_data[user_id]["gender"] = "male"
            await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ, –±—Ä–∞—Ç! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ–º –æ–±—â–∞—Ç—å—Å—è!", reply_markup=main_keyboard)
            return
        elif "–¥–µ–≤—É—à–∫–∞" in text:
            user_data[user_id]["gender"] = "female"
            await update.message.reply_text("–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –û—á–µ–Ω—å —Ä–∞–¥–∞ –æ–±—â–∞—Ç—å—Å—è üå∏", reply_markup=main_keyboard)
            return
        else:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ ‚Äî —Ç—ã –ø–∞—Ä–µ–Ω—å –∏–ª–∏ –¥–µ–≤—É—à–∫–∞?", reply_markup=gender_keyboard)
            return

    gender = user_data[user_id]["gender"]

    # –ö–æ–º–∞–Ω–¥—ã
    if "–º–µ–Ω—é" in text:
        await update.message.reply_text("–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:", reply_markup=main_keyboard)
    elif "–∏—Å—Ç–æ—Ä–∏" in text:
        await update.message.reply_text("üìñ –ò—Å—Ç–æ—Ä–∏—è:\n\n" + random.choice(short_stories))
    elif "–∞–Ω–µ–∫–¥–æ—Ç" in text:
        await update.message.reply_text("üòÇ –ê–Ω–µ–∫–¥–æ—Ç:\n\n" + random.choice(jokes))
    elif "pluse+" in text:
        await update.message.reply_text("–¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –º–æ—ë —Å–µ—Ä–¥—Ü–µ üíå")
    elif "—Ñ–∞–∫—Ç" in text:
        await update.message.reply_text("üé≤ –§–∞–∫—Ç:\n\n" + random.choice(facts))
    else:
        # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = random.choice(male_responses if gender == "male" else female_responses)
        question = random.choice(USER_PROMPTS)
        await update.message.reply_text(f"{response}\n\n{question}")

def main():
    import os
    TOKEN = os.getenv("BOT_TOKEN")
    if not TOKEN:
        print("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        return

    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()