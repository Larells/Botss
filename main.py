import random
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters
from questions_answers import USER_PROMPTS, BOT_RESPONSES

# –í—Ä–µ–º–µ–Ω–Ω–∞—è –ø–∞–º—è—Ç—å
user_data = {}

# –ò–≥—Ä–æ–≤—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
guess_number_game = {}

# –ö–Ω–æ–ø–∫–∏
main_keyboard = ReplyKeyboardMarkup([
    ["üìú –ò—Å—Ç–æ—Ä–∏—è", "üòÇ –ê–Ω–µ–∫–¥–æ—Ç"],
    ["üéÆ –ò–≥—Ä—ã", "üß† –ö—Ç–æ —è?"],
    ["üß© –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç", "üíå –ü–æ–¥–ø–∏—Å–∫–∞"]
], resize_keyboard=True)

games_keyboard = ReplyKeyboardMarkup([
    ["üé≤ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ", "üé± –®–∞—Ä —Å—É–¥—å–±—ã"],
    ["üÉè –ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ", "üîô –ù–∞–∑–∞–¥"]
], resize_keyboard=True)

stories = [
    "–ö–æ–≥–¥–∞ –æ–Ω –æ—Å—Ç–∞–ª—Å—è –æ–¥–∏–Ω –≤ –≥–æ—Ä–æ–¥–µ, –æ–Ω –ø–æ–Ω—è–ª, —á—Ç–æ –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ–∫–ª—è—Ç–∏–µ, –∞ —à–∞–Ω—Å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Å–æ–±–æ–π.",
    "–û–Ω–∞ —à–ª–∞ –ø–æ–¥ –¥–æ–∂–¥—ë–º –±–µ–∑ –∑–æ–Ω—Ç–∞. –ü—Ä–æ—Å—Ç–æ –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–ª—ë–∑—ã –Ω–∏–∫—Ç–æ –Ω–µ —É–≤–∏–¥–∏—Ç –ø–æ–¥ –∫–∞–ø–ª—è–º–∏.",
    "–ò–Ω–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø–æ—Ç–µ—Ä—è—Ç—å—Å—è, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø—É—Ç—å, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –±—ã–ª —Ç–≤–æ–∏–º.",
]

jokes = [
    "‚Äî –ü–æ—á–µ–º—É –±–æ—Ç –Ω–µ —Ö–æ–¥–∏—Ç –≤ —Å–ø–æ—Ä—Ç–∑–∞–ª?\n‚Äî –£ –Ω–µ–≥–æ –Ω–µ—Ç —Ç–µ–ª–∞, —Ç–æ–ª—å–∫–æ –¥—É—à–∞ üòÖ",
    "‚Äî –Ø –ø—Ä–æ—Å–Ω—É–ª—Å—è –∏ —Å—Ä–∞–∑—É –ª—ë–≥.\n‚Äî –≠—Ç–æ –∫–∞–∫?\n‚Äî –í—Å—Ç–∞–ª —Å –¥–∏–≤–∞–Ω–∞, –ª—ë–≥ –≤ –¥–µ–ø—Ä–µ—Å—Å–∏—é.",
    "‚Äî –£ –º–µ–Ω—è –∞–ª–ª–µ—Ä–≥–∏—è –Ω–∞ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∏. –°–∏–º–ø—Ç–æ–º—ã: —Ä–∞–±–æ—Ç–∞ –∏ –æ—Ç—á–∞—è–Ω–∏–µ.",
    "‚Äî –ó–Ω–∞–µ—à—å, –∑–∞—á–µ–º –º–Ω–µ –∑–∞—Ä—è–¥–∫–∞ –ø–æ —É—Ç—Ä–∞–º?\n‚Äî –ß—Ç–æ–±—ã –Ω–µ —É—Å–Ω—É—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞.",
]

facts = [
    "–£ –º–æ–∑–≥–∞ –Ω–µ—Ç –±–æ–ª–µ–≤—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ—Ä–æ–≤ ‚Äî —Å–∞–º –º–æ–∑–≥ –Ω–µ —á—É–≤—Å—Ç–≤—É–µ—Ç –±–æ–ª–∏.",
    "–°–µ—Ä–¥—Ü–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –º–æ–∂–µ—Ç ¬´—Ä–∞–∑–æ—Ä–≤–∞—Ç—å—Å—è¬ª –æ—Ç —Å–∏–ª—å–Ω–æ–π —ç–º–æ—Ü–∏–∏.",
    "–ú–æ–∑–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–µ–µ –≤–æ —Å–Ω–µ, —á–µ–º –∫–æ–≥–¥–∞ —Ç—ã —Å–º–æ—Ç—Ä–∏—à—å TikTok.",
]

truth_or_dare = [
    "–ü—Ä–∞–≤–¥–∞: –¢—ã –∫–æ–≥–¥–∞-–Ω–∏–±—É–¥—å –ø—Ä–∏—Ç–≤–æ—Ä—è–ª—Å—è, —á—Ç–æ —Å–ø–∏—à—å, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞?",
    "–ü—Ä–∞–≤–¥–∞: –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è —Å–µ–∫—Ä–µ—Ç, –æ –∫–æ—Ç–æ—Ä–æ–º –Ω–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç?",
    "–î–µ–π—Å—Ç–≤–∏–µ: –°–∫–∞–∂–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç —Å–∞–º —Å–µ–±–µ.",
    "–ü—Ä–∞–≤–¥–∞: –ë—ã–ª–∞ –ª–∏ —É —Ç–µ–±—è –≤–ª—é–±–ª—ë–Ω–Ω–æ—Å—Ç—å –≤ –≤—ã–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞?",
    "–î–µ–π—Å—Ç–≤–∏–µ: –ù–∞–ø–∏—à–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ–ª–æ–≤–µ–∫—É, –∫–æ—Ç–æ—Ä–æ–º—É —Ç—ã –¥–∞–≤–Ω–æ –Ω–µ –ø–∏—Å–∞–ª.",
]

magic_ball = [
    "–ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏–π.",
    "–°–∫–æ—Ä–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç.",
    "–ù–µ –Ω–∞–¥–µ–π—Å—è.",
    "–õ—É—á—à–µ –Ω–µ –∑–Ω–∞—Ç—å –æ—Ç–≤–µ—Ç–∞.",
    "–°–∫–æ—Ä–æ –≤—Å—ë –∏–∑–º–µ–Ω–∏—Ç—Å—è.",
    "–¢—ã —É–∂–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç –≤ –≥–ª—É–±–∏–Ω–µ –¥—É—à–∏.",
]

def get_gender_emoji(gender):
    return "üßë" if gender == "male" else "üë©"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    name = update.effective_user.first_name
    if user_id not in user_data:
        user_data[user_id] = {
            "name": name,
            "gender": None,
            "last_topics": []
        }
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {name}! üôå –Ø —Ç–≤–æ–π –±–æ—Ç-–¥—Ä—É–≥. –ù–∞–ø–∏—à–∏, –∫—Ç–æ —Ç—ã:",
        reply_markup=ReplyKeyboardMarkup(
            [["üßë –Ø –ø–∞—Ä–µ–Ω—å", "üë© –Ø –¥–µ–≤—É—à–∫–∞"]],
            resize_keyboard=True
        )
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    message = update.message.text
    user = user_data.setdefault(user_id, {"name": "–î—Ä—É–≥", "gender": None, "last_topics": []})

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–ª–∞
    if user["gender"] is None:
        if "–ø–∞—Ä–µ–Ω—å" in message.lower():
            user["gender"] = "male"
            await update.message.reply_text("–û—Ç–ª–∏—á–Ω–æ, –±—Ä–∞—Ç! –î–∞–≤–∞–π –±–æ–ª—Ç–∞—Ç—å üî•", reply_markup=main_keyboard)
            return
        elif "–¥–µ–≤—É—à–∫–∞" in message.lower():
            user["gender"] = "female"
            await update.message.reply_text("–ö—Ä—É—Ç–æ! –Ø —Ä–∞–¥ –Ω–∞—à–µ–º—É –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É üíñ", reply_markup=main_keyboard)
            return
        else:
            await update.message.reply_text("–í—ã–±–µ—Ä–∏ –ø–æ–ª, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å üôÉ")
            return

    gender = user["gender"]
    name = user["name"]

    # –ò–≥—Ä—ã
    if message == "üéÆ –ò–≥—Ä—ã":
        await update.message.reply_text("–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É üé≤", reply_markup=games_keyboard)
    elif message == "üîô –ù–∞–∑–∞–¥":
        await update.message.reply_text("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É –º–µ–Ω—é:", reply_markup=main_keyboard)
    elif message == "üé≤ –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ":
        number = random.randint(1, 5)
        guess_number_game[user_id] = number
        await update.message.reply_text("–Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 5. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å!")
    elif message.isdigit() and user_id in guess_number_game:
        correct = guess_number_game[user_id]
        guess = int(message)
        if guess == correct:
            await update.message.reply_text("–£–≥–∞–¥–∞–ª! üéâ –ö—Ä–∞—Å–∞–≤—á–∏–∫!")
        else:
            await update.message.reply_text(f"–ù–µ–∞! –Ø –∑–∞–≥–∞–¥–∞–ª {correct} üòú")
        del guess_number_game[user_id]
    elif message == "üÉè –ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ":
        await update.message.reply_text(random.choice(truth_or_dare))
    elif message == "üé± –®–∞—Ä —Å—É–¥—å–±—ã":
        await update.message.reply_text(random.choice(magic_ball))

    # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    elif "–∞–Ω–µ–∫–¥–æ—Ç" in message.lower():
        await update.message.reply_text("üòÇ –ê–Ω–µ–∫–¥–æ—Ç:\n\n" + random.choice(jokes))
    elif "–∏—Å—Ç–æ—Ä–∏" in message.lower():
        await update.message.reply_text("üìú –ò—Å—Ç–æ—Ä–∏—è:\n\n" + random.choice(stories))
    elif "–ø–æ–¥–ø–∏—Å" in message.lower():
        await update.message.reply_text("–¢—ã —É–∂–µ —Å–æ –º–Ω–æ–π. –ê —ç—Ç–æ –ª—É—á—à–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ üíå")
    elif "—Ñ–∞–∫—Ç" in message.lower():
        await update.message.reply_text("üß© –§–∞–∫—Ç:\n\n" + random.choice(facts))
    elif "–º–µ–Ω—é" in message.lower():
        await update.message.reply_text("–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:", reply_markup=main_keyboard)
    elif "–∫—Ç–æ —è" in message.lower():
        g = "–ø–∞—Ä–µ–Ω—å" if gender == "male" else "–¥–µ–≤—É—à–∫–∞"
        topics = ", ".join(user["last_topics"][-3:]) or "–Ω–∏—á–µ–≥–æ –æ—Å–æ–±–æ"
        await update.message.reply_text(f"–¢—ã ‚Äî {g}, —Ç–µ–±—è –∑–æ–≤—É—Ç {name}, –º—ã –≥–æ–≤–æ—Ä–∏–ª–∏ –æ: {topics}")
    else:
        # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        user["last_topics"].append(message)
        response = random.choice(BOT_RESPONSES)
        question = random.choice(USER_PROMPTS)
        await update.message.reply_text(f"{response}\n\n{question}")

def main():
    import os
    token = os.getenv("BOT_TOKEN")
    if not token:
        print("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return
    app = ApplicationBuilder().token(token).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == '__main__':
    main()